#version 150
uniform vec3 
	light_pos, light_dir;
uniform vec4 light_color;

in vec3 f_pos_world;
in vec3 f_normal;

//light is always 1,1,1

void main()
{
	vec3 normal;
	vec3 color = vec3(1,1,1) * light_color.xyz * light_color.w; // maximum color reflected to eye
	float length = .0001 + length(f_normal);
	normal = f_normal /length; //normalize

	vec3 dir_from_world_to_light = normalize(light_pos-f_pos_world); 

	float light_added =max(0, dot(light_dir, -dir_from_world_to_light) );
	float light_power_reflected = max( 0,dot(normal, -light_dir));
	float light = light_added;// * light_power_reflected;

	gl_FragColor = vec4(color*light,1);
	gl_FragColor = vec4(light_added,0,0,1);


	//gl_FragColor = vec4(abs(light_dir.x),abs(light_dir.y),abs(light_dir.z),1);
	//gl_FragColor = vec4(normal,1);
	
}
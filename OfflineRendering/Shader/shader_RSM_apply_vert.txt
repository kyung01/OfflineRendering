#version 150
uniform mat4 mat_proj , mat_viewModel, mat_view_inverted;
uniform mat4 mat_light;

in vec3 pos;
in vec3 normal;

out vec3 f_pos_world;
out vec3 f_normal;
out vec4 f_pos_from_light; // position looked from light

void main(){
	mat4 mat_model = mat_view_inverted * mat_viewModel ;
	vec4 center = mat_model * vec4(0,0,0,1);

	gl_Position = mat_proj * mat_viewModel * vec4(pos,1);
	f_pos_world = (mat_model * vec4(pos,1)).xyz;
	f_normal = (mat_model * vec4(normal,1) -center).xyz;
	f_pos_from_light = mat_light*mat_model* vec4(pos,1);
}
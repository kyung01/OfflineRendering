#version 150
uniform mat4 mat_proj , mat_viewModel, mat_view_inversed;
uniform vec3 light_pos, light_dir;
uniform vec4 light_color, material_color;

in vec3 pos;
in vec3 normal;

out vec3 f_pos_world;
out vec3 f_normal;

vec3 get_normal(vec3 normal_before, mat4 mat_model){
	vec3 normal_translated = 
	(mat_model* vec4(normal_before,1) - mat_model* vec4(0,0,0,1)).xyz;
	return normal_translated;
}

void main(){
	gl_Position = mat_proj * mat_viewModel * vec4(pos,1);
}